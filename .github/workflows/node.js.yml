# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches:
    - main
    - feature/*
    - release/*
  pull_request:
    branches:
    - main
    - feature/*
    - release/*

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x]

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    - name: Build translatr-ui
      working-directory: ui
      run: |
        npm install
        npm run build

    - name: Build lets-release
      working-directory: lets-release
      run: |
        npm install
        npm run build

    - name: Publish Unit Test Results
      uses: EnricoMi/publish-unit-test-result-action@v1.6
      if: always()
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        files: ./**/test-reports/*.xml

    - name: Generate Report UI
      id: xunit-viewer-ui
      uses: AutoModality/action-xunit-viewer@v1
      with:
        results: ui/tmp/test-reports
        output: test-report-ui.html
    - name: Attach Report UI
      uses: actions/upload-artifact@v1
      with:
        name: ${{ steps.xunit-viewer-ui.outputs.report-name }}
        path: ${{ steps.xunit-viewer-ui.outputs.report-file }}

    - name: Generate Report Lets Release
      id: xunit-viewer-lets-release
      uses: AutoModality/action-xunit-viewer@v1
      with:
        results: lets-release/tmp/test-reports
        output: test-report-lets-release.html
    - name: Attach Report Lets Release
      uses: actions/upload-artifact@v1
      with:
        name: ${{ steps.xunit-viewer-lets-release.outputs.report-name }}
        path: ${{ steps.xunit-viewer-lets-release.outputs.report-file }}
