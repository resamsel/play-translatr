# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

#
# API
#

# Swagger Specification
# GET		/api/swagger.json			controllers.ApiHelpController.getResources

GET           /api/projects                                                           controllers.ProjectsApi.find
GET           /api/project/:id/search                                                 controllers.ProjectsApi.search(id: java.util.UUID)
GET           /api/project/:projectId                                                 controllers.ProjectsApi.get(projectId: java.util.UUID, fetch: String ?= "")
GET           /api/project/:projectId/activity                                        controllers.ProjectsApi.activity(projectId: java.util.UUID)
POST          /api/project                                                            controllers.ProjectsApi.create
PUT           /api/project                                                            controllers.ProjectsApi.update
DELETE        /api/project/:projectId                                                 controllers.ProjectsApi.delete(projectId: java.util.UUID)

GET           /api/project/:projectId/locales                                         controllers.LocalesApi.find(projectId: java.util.UUID)
GET           /api/locales/:projectId                                                 controllers.LocalesApi.find(projectId: java.util.UUID)
GET           /api/locale/:localeId                                                   controllers.LocalesApi.get(localeId: java.util.UUID)
POST          /api/locale                                                             controllers.LocalesApi.create
PUT           /api/locale                                                             controllers.LocalesApi.update
DELETE        /api/locale/:localeId                                                   controllers.LocalesApi.delete(localeId: java.util.UUID)
POST          /api/locale/:localeId/import                                            controllers.LocalesApi.upload(localeId: java.util.UUID)
GET           /api/locale/:localeId/export/:fileType                                  controllers.LocalesApi.download(localeId: java.util.UUID, fileType: String)

GET           /api/project/:projectId/keys                                            controllers.KeysApi.find(projectId: java.util.UUID)
GET           /api/keys/:projectId                                                    controllers.KeysApi.find(projectId: java.util.UUID)
GET           /api/key/:keyId                                                         controllers.KeysApi.get(keyId: java.util.UUID, fetch: String ?= "")
POST          /api/key                                                                controllers.KeysApi.create
PUT           /api/key                                                                controllers.KeysApi.update
DELETE        /api/key/:keyId                                                         controllers.KeysApi.delete(keyId: java.util.UUID)

GET           /api/project/:projectId/messages                                        controllers.TranslationsApi.findByProject(projectId: java.util.UUID)
GET           /api/messages                                                           controllers.TranslationsApi.find()
GET           /api/messages/:projectId                                                controllers.TranslationsApi.findByProject(projectId: java.util.UUID)
GET           /api/message/:messageId                                                 controllers.TranslationsApi.get(messageId: java.util.UUID)
POST          /api/message                                                            controllers.TranslationsApi.create
PUT           /api/message                                                            controllers.TranslationsApi.update
DELETE        /api/message/:messageId                                                 controllers.TranslationsApi.delete(messageId: java.util.UUID)

GET           /api/project/:projectId/members                                         controllers.MembersApi.find(projectId: java.util.UUID)
GET           /api/members/:projectId                                                 controllers.MembersApi.find(projectId: java.util.UUID)
GET           /api/member/:memberId                                                   controllers.MembersApi.get(memberId: java.lang.Long, fetch: String ?= "")
POST          /api/member                                                             controllers.MembersApi.create
PUT           /api/member                                                             controllers.MembersApi.update
DELETE        /api/member/:memberId                                                   controllers.MembersApi.delete(memberId: java.lang.Long)

GET           /api/users                                                              controllers.UsersApi.find
GET           /api/profile                                                            controllers.UsersApi.profile(request: Request)
GET           /api/me                                                                 controllers.UsersApi.me(request: Request, fetch: String ?= "")
GET           /api/user/:userId                                                       controllers.UsersApi.get(userId: java.util.UUID)
POST          /api/user                                                               controllers.UsersApi.create(request: Request)
PUT           /api/user                                                               controllers.UsersApi.update
DELETE        /api/user/:userId                                                       controllers.UsersApi.delete(userId: java.util.UUID)
GET           /api/user/:userId/activity                                              controllers.UsersApi.activity(userId: java.util.UUID)
PUT           /api/user/:userId/settings                                              controllers.UsersApi.saveSettings(userId: java.util.UUID)
PATCH         /api/user/:userId/settings                                              controllers.UsersApi.updateSettings(userId: java.util.UUID)

GET           /api/accesstokens                                                       controllers.AccessTokensApi.find
GET           /api/accesstoken/:accessTokenId                                         controllers.AccessTokensApi.get(accessTokenId: Long)
POST          /api/accesstoken                                                        controllers.AccessTokensApi.create
PUT           /api/accesstoken                                                        controllers.AccessTokensApi.update
DELETE        /api/accesstoken/:accessTokenId                                         controllers.AccessTokensApi.delete(accessTokenId: Long)

GET           /api/featureflags                                                       controllers.FeatureFlagsApi.find
GET           /api/featureflag/:featureFlagId                                         controllers.FeatureFlagsApi.get(featureFlagId: java.util.UUID)
POST          /api/featureflag                                                        controllers.FeatureFlagsApi.create
PUT           /api/featureflag                                                        controllers.FeatureFlagsApi.update
DELETE        /api/featureflag/:featureFlagId                                         controllers.FeatureFlagsApi.delete(featureFlagId: java.util.UUID)

GET           /api/notifications                                                      controllers.NotificationsApi.find

GET           /api/activities                                                         controllers.ActivitiesApi.find
GET           /api/activities/aggregated                                              controllers.ActivitiesApi.activity

GET           /api/authclients                                                        controllers.AuthClientsApi.find

# Map static resources from the /public folder to the /assets URL path
GET           /assets/*file                                                           controllers.Assets.versioned(path="/public", file: Asset)
GET           /api/docs                                                               controllers.ApiDocs.index()

# Generic mappings based on username, project name, ...
GET           /api/:username                                                          controllers.UsersApi.byName(username: String, fetch: String ?= "")
GET           /api/:username/:projectName                                             controllers.ProjectsApi.byOwnerAndName(username: String, projectName: String, fetch: String ?= "")
GET           /api/:username/:projectName/locales/:localeName                         controllers.LocalesApi.byOwnerAndProjectNameAndName(username: String, projectName: String, localeName: String, fetch: String ?= "")
GET           /api/:username/:projectName/locales/:localeName/export/:fileType        controllers.LocalesApi.downloadBy(username: String, projectName: String, localeName: String, fileType: String)
GET           /api/:username/:projectName/keys/:keyName                               controllers.KeysApi.byOwnerAndProjectNameAndName(username: String, projectName: String, keyName: String, fetch: String ?= "")

# GET		/api/*file					controllers.ApiDocs.versioned(path="/public/lib/swagger-ui", file: String)

#
# WEB
#

GET           /                                                                       controllers.Application.index(request: Request)
GET           /ui                                                                     controllers.Application.indexUi
GET           /ui/                                                                    controllers.Default.redirect(to = "/ui")
GET           /admin                                                                  controllers.Application.indexAdmin
GET           /admin/                                                                 controllers.Default.redirect(to = "/admin")

# Activity
GET           /activity/csv                                                           controllers.Application.activityCsv

# Authentication
GET           /login/:authClient                                                      controllers.Application.login(request: Request, authClient: String)
GET           /authenticate                                                           @org.pac4j.play.CallbackController.callback(request: Request)
POST          /authenticate                                                           @org.pac4j.play.CallbackController.callback(request: Request)
GET           /casProxyCallback                                                       @org.pac4j.play.CallbackController.callback(request: Request)
POST          /casProxyCallback                                                       @org.pac4j.play.CallbackController.callback(request: Request)
GET           /logout                                                                 @org.pac4j.play.LogoutController.logout(request: Request)

# Serve static assets under public directory
GET           /ui/*file                                                               controllers.Application.assetOrDefaultUi(file: String)
GET           /admin/*file                                                            controllers.Application.assetOrDefaultAdmin(file: String)

# Prometheus metrics
GET           /metrics                                                                controllers.Metrics.metrics
