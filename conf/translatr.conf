translatr {
	forceSSL = false
	forceSSL = ${?FORCE_SSL}

	# The list of enabled auth providers
	# Currently available: keycloak, google, github, facebook, twitter
	auth.providers = ""
	auth.providers = ${?AUTH_PROVIDERS}

	search {
		#
		# Defaults for search
		#
		missing = false
		limit = 20
	}

	stream.io {
		#
		# Stream.io is the notification provider for the app. To retrieve the
		# app credentials, go to https://getstream.io and create an app.
		#
		key = ""
		key = ${?STREAM_IO_KEY}
		key = ""
		secret = ${?STREAM_IO_SECRET}
	}
}

db.default {
	driver = "org.h2.Driver"
	driver = ${?DATABASE_DRIVER}
	url = "jdbc:h2:./data/translatr"
	url = ${?DATABASE_URL}
	username = ${?DATABASE_USER}
	password = ${?DATABASE_PASSWORD}
	logSql = false
	logSql = ${?DATABASE_LOG_SQL}
}

play {
	crypto.secret = ${?APPLICATION_SECRET}

	evolutions.db.default.autoApply = true

	i18n.langs = [ "en", "de" ]

	http {
		filters = filters.Filters
		parser.maxMemoryBuffer = 8M
	}

	mailer.mock = true

	modules {
		enabled += "modules.FormattersModule"
		disabled += "play.data.format.FormattersModule"
		enabled += "be.objectify.deadbolt.java.DeadboltModule"
		enabled += "security.MyCustomDeadboltHook"
		enabled += "modules.SimpleOAuthModule"
		enabled += "play.modules.swagger.SwaggerModule"
		enabled += "modules.StreamModule"
		disabled += "play.core.ObjectMapperModule"
		enabled += "modules.JsonModule"
		enabled += "modules.ActorModule"
	}

	server.netty.transport = ${?NETTY_TRANSPORT}
}

ebean.default = ["models.*"]

redis {
	host = ${?REDIS_HOST}
	database = ${?REDIS_DATABASE}
}

api.version = "1.0"
swagger.api {
	basepath = "/api"
	info {
		contact = "Ren√© Panzar"
		# description = ""
		title = "The Translatr API"
		# termsOfService : (String) - Terms Of Service | default : empty,
		# license : (String) - Terms Of Service | default : empty,
		# licenseUrl : (String) - Terms Of Service | default : empty
	}
}

# deadbolt
include "play-authenticate/deadbolt.conf"
# play authenticate
include "play-authenticate/mine.conf"
